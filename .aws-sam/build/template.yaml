AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'helloworld

  Sample SAM Template for helloworld

  '
Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    Runtime: provided.al2023
    Architectures:
    - x86_64
  HttpApi:
    CorsConfiguration:
      AllowOrigins:
      - '*'
      MaxAge: 600
    Auth:
      Authorizers:
        HelloWorldAuthorizer:
          FunctionArn:
            Fn::GetAtt:
            - HelloWorldAuthorizerFunction
            - Arn
          AuthorizerPayloadFormatVersion: '2.0'
          Identity:
            Headers:
            - Authorization
          EnableSimpleResponses: true
        CognitoAuthorizer:
          AuthorizationScopes:
          - helloWorldResourceServer/customer
          IdentitySource: $request.header.Authorization
          JwtConfiguration:
            issuer:
              Fn::Sub: https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPool}
            audience:
            - Ref: UserPoolClient
Resources:
  LambdaPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - HelloWorldAuthorizerFunction
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub:
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiID}/authorizers/*
        - ApiID:
            Ref: HelloWorldHttpApi
  HelloWorldSqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: helloworldqueue
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: prajwalmarch9
      UserPoolId:
        Ref: UserPool
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: Helloworld-Dev
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UsernameAttributes:
      - email
      AutoVerifiedAttributes:
      - email
      UsernameConfiguration:
        CaseSensitive: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireUppercase: true
          RequireNumbers: true
          RequireSymbols: true
          TemporaryPasswordValidityDays: 7
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: HelloworldApplicationClient
      UserPoolId:
        Ref: UserPool
      GenerateSecret: false
      RefreshTokenValidity: 30
      PreventUserExistenceErrors: ENABLED
      ExplicitAuthFlows:
      - ALLOW_USER_PASSWORD_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
      - ALLOW_USER_SRP_AUTH
  HelloWorldHttpApi:
    Type: AWS::Serverless::HttpApi
  HelloWorldAuthorizerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
      SamResourceId: HelloWorldAuthorizerFunction
    Properties:
      CodeUri: HelloWorldAuthorizerFunction
      Handler: bootstrap
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
      SamResourceId: HelloWorldFunction
    Properties:
      CodeUri: HelloWorldFunction
      Handler: bootstrap
      Events:
        GreetPublic:
          Type: HttpApi
          Properties:
            Path: /public/hello
            Method: GET
            ApiId:
              Ref: HelloWorldHttpApi
        Greet:
          Type: HttpApi
          Properties:
            Path: /hello
            Method: GET
            Auth:
              Authorizer: HelloWorldAuthorizer
            ApiId:
              Ref: HelloWorldHttpApi
      Environment:
        Variables:
          PARAM1: VALUE
          HELLO_WORLD_SQS_QUEUE_URL:
            Ref: AWS::NoValue
  HelloWorldQueueProcessorFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
      SamResourceId: HelloWorldQueueProcessorFunction
    Properties:
      CodeUri: HelloWorldQueueProcessorFunction
      Handler: bootstrap
      Events:
        Greet:
          Type: HttpApi
          Properties:
            Path: /queue_processor
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer
            ApiId:
              Ref: HelloWorldHttpApi
Outputs:
  CognitoID:
    Description: The Cognito UserPool ID
    Value:
      Ref: UserPool
  CognitoClientID:
    Description: The Cognito UserPool Client ID
    Value:
      Ref: UserPoolClient
  ListUrl:
    Description: List API URL
    Value:
      Fn::Sub: https://${HelloWorldHttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/
  HelloWorldFunctionArn:
    Description: List Lambda Function ARN
    Value:
      Fn::GetAtt:
      - HelloWorldFunctionRole
      - Arn
